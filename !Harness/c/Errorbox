/* Errorbox.c			*/
/* © Rik Griffin Sep 1998	*/

#include <stdlib.h>
#include <string.h>
#include <stdarg.h>
#include <stdio.h>

#include "swis.h"
#include "kernel.h"
#include "wimp.h"

extern int Wimp_Version;

int error_box(char *sprite, char *title, char *text, int icons, ...) {
  char mess[256];
  char butt[256];
  int l, adjust = 0;
  _kernel_swi_regs r;
  va_list ap;

  va_start(ap, icons);
  butt[0] = '\0';
  for (l=1; l<=icons; l++) {
    strcat(butt, va_arg(ap, char *));
    if (l != icons) strcat(butt, ",");
  }
  va_end(ap);

  r.r[0] = (int)mess;
  r.r[1] = (icons == 1 ? (1<<7) : 0) | (1<<4) | (1<<1) | (1<<0);
  r.r[2] = (int)title;
  *(int *)mess = 0;
  strncpy(mess + 4, text, 252);
  if (Wimp_Version >= 350) {
    r.r[1] &= ~3;	/* remove 2 standard buttons	*/
    r.r[1] |= 1<<8;	/* riscos3.5+ style report	*/
    if (icons == 1) {
      r.r[1] |= (1<<9);	/* information report		*/
    } else {
      r.r[1] |= 1<<11;	/* question report		*/
    }
    r.r[3] = (int) sprite;
    r.r[4] = 1;
    r.r[5] = (int)butt;
    adjust = 2;
  }
  _kernel_swi(Wimp_ReportError, &r, &r);
  return r.r[1] - adjust;
}


void tracef(char *format, ...) {
  va_list ap;
  char text[256];
  va_start(ap, format);
  vsprintf(text, format, ap);
  va_end(ap);
  error_box("error", "Trace", text, 1, "OK");
}
