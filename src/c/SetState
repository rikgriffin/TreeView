/* TreeView:M_SetState.c	*/
/* Rik Griffin Oct 2003		*/

#include "Main.h"
#include "Redraw.h"


#define DEBUGLEVEL	1


/*
 * Visit every node in the branch and clear the 'sort valid' flag.
 * The flag only matters for nodes that have children.
*/
static void invalidate_sort(PrivateTreeView *me, TreeNode *start) {
  TreeNode *n = start;

  IGNORE(me);

  n->sorted.valid = 0;

  while (n != NULL) {

    if (n->child != NULL) invalidate_sort(me, n->child);

    n = n->next;
  }
}


/* updates our gadget flags and changes the window as required	*/
/* This can only remove existing scrollbars if the AllowxScroll	*/
/* flag is cleared, it will not add new ones.			*/
_kernel_oserror *method_set_gadget_state(PrivateTreeView *me, unsigned int new_flags) {
//  _kernel_oserror *e;
  unsigned int changed, redraw = 0;

  changed = me->flags ^ new_flags;

  DEBUG(DEBUGLEVEL, ("_set_state, changed flags = %x\n", changed));
  if (changed == 0) return NULL;


  /*
   * scrollbar flags changed: _make_icons() will call _update_extent()
   * which updates me->scrollbars to reflect the new state
  */
  if (changed & (TreeView_AllowVScroll | TreeView_AllowHScroll)) {
    DEBUG(DEBUGLEVEL, ("Scrollbars changed\n"));
    me->scrollbars = new_flags & (TreeView_AllowVScroll | TreeView_AllowHScroll);
    redraw = 1;
  }

  /* Turning the auto update flag on causes an update?	*/
/*
  if ((changed & new_flags) & TreeView_AutoUpdate)) redraw = 1;
*/

  if (changed & (TreeView_ShowCurrentNode | TreeView_PlotLines | TreeView_AllowExpand | TreeView_FlatMode | TreeView_TextBelowSprite | TreeView_SortDisplay | TreeView_SortReversed | TreeView_SortBySprite)) {
    /* need to realculate icons and redraw	*/
    redraw = 1;
  }

  if (changed & (TreeView_FlatMode | TreeView_SortDisplay | TreeView_SortReversed | TreeView_SortBySprite)) {
    /* Need to force a resort (at the next redraw)	*/
    invalidate_sort(me, me->root_node);
  }

  /* fading currently doesn't do anything			*/
  /* should probably disable clicking or something like that	*/
  if (changed & Gadget_Faded) {
    if (new_flags & Gadget_Faded) {
      DEBUG(DEBUGLEVEL, ("faded\n"));
    } else {
      DEBUG(DEBUGLEVEL, ("unfaded\n"));
    }
  }

  me->flags = new_flags;

  /* AutoUpdate flag was checked here but that's wrong, as that		*/
  /* flag only applies to adding/changing nodes				*/
  if (redraw) {
    (void) _make_icons(me, 1);
  }

  return NULL;
}
